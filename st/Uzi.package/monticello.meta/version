(name 'Uzi-Richo.43' message '* Fixed tests.' id 'ddb536cc-de6f-144a-8a32-9b23f5629caa' date '4 August 2015' time '5:46:52.076 pm' author 'Richo' ancestors ((name 'Uzi-Richo.42' message '* Fixed some tests that were failing due to a small change I did previously regarding the creation of UziPrimitive instances. The problem I introduced was that previously I was saving the instances in a Dictionary and retrieving them based on their code. But now, I''m creating them on the fly. So, obviously the equality is lost. To fix it, I simply implemented #= and #hash on UziPrimitive.' id '6786c54a-43c7-e944-b905-977a7a963244' date '4 August 2015' time '5:41:00.761 pm' author 'Richo' ancestors ((name 'Uzi-Richo.41' message '* Added Uzi class>>INPUT and OUTPUT methods to hold the value of the corresponding arduino constants.* Changed UziSimulator>>configurePins to use these new methods instead of the hardcoded values.' id 'f489c94e-18e6-7e47-9e82-5043207ca40a' date '4 August 2015' time '5:30:30.591 pm' author 'Richo' ancestors ((name 'Uzi-Richo.40' message '* Added UziParseError to hold PetitFailures occurred after parsing.* Changed UziCompiler>>compile: to signal UziParseError if the parsing was a failure. Now that I think of it, this would probably make more sense inside UziParser.* Removed the pin mode encoding from UziEncoder and UziProgram. This makes the code simpler and the programs a lot smaller.* Changed UziSimulator>>configurePins to mimic the new "reset" function in the firmware.* Starting to implement UziServer, which would be a simple RESTServer exposing the Uzi tools and allowing a web editor in a browser to interact with an arduino.' id 'cd0ca299-0066-1c41-82d0-5ed1cae339c5' date '4 August 2015' time '5:10:33.63 pm' author 'Richo' ancestors ((name 'Uzi-Richo.39' message '* Renamed EEPROMReader4 to EEPROMReader. And EEPROMWriter4 to EEPROMWriter.' id 'a362e77d-23d9-be4a-a6e7-d4d9e8935471' date '31 July 2015' time '12:06:40.387 pm' author 'Richo' ancestors ((name 'Uzi-Richo.38' message '* Removed old EEPROM experiments.' id 'd0c45322-e5ed-584f-ab88-92e6ba715b36' date '31 July 2015' time '12:03:54.002 pm' author 'Richo' ancestors ((name 'Uzi-Richo.37' message '* Added primitive #toggle. Also, changed how the primitives are accessed. I decided it was simpler to just make a "switch" statement instead of a Dictionary. It is less flexible, of course, but it''s simpler.* Added some tests for the EEPROMReader that Tera suggested.' id 'a1891414-0d24-da47-abfe-0dcfa92a16ef' date '31 July 2015' time '11:59:53.222 am' author 'Richo' ancestors ((name 'Uzi-Richo.36' message 'Still working in the EEPROM wear leveling algorithm.' id '6a0a089a-a11f-d94c-bf4b-f2a15ce8dcee' date '4 May 2015' time '3:01:21.288 pm' author 'Richo' ancestors ((name 'Uzi-Richo.35' message '* Added a couple of experiments to try to simulate an EEPROM and implement a basic wear leveling algorithm.' id 'b9a3cbb4-854f-e24b-8d9e-0771819858a5' date '19 March 2015' time '2:58:49.159 pm' author 'Richo' ancestors ((name 'Uzi-Richo.34' message '* Added a new request command to UziProtocol that sends a program to be saved in the EEPROM.' id 'a3d98bb1-d9ca-6949-a404-06cbde07d823' date '15 December 2014' time '5:49:38.719 pm' author 'Richo' ancestors ((name 'Uzi-Richo.33' message '* Added new command to set the reporting flag of a specific pin.* Changed UziSimulator>>configurePins to set the reporting flag to true only for input pins.' id 'f911021e-1198-9f43-85a7-cd120970b244' date '15 December 2014' time '5:14:10.431 pm' author 'Richo' ancestors ((name 'Uzi-Richo.32' message '* Removed UziEncoder>>writeProgramPinModes:' id '39783d37-6e90-954c-ba03-7c458b7e5afd' date '11 December 2014' time '4:41:59.207 pm' author 'Richo' ancestors ((name 'Uzi-Richo.31' message '* Changed UziProgram to also save the output pins.* Changed UziEncoder to encode the input pins first, then the output pins as well.* Changed UziEncoder to start encoding from pin 0 instead of 1.' id '852faa1b-5d01-a144-a9aa-6c8535c15ddb' date '11 December 2014' time '4:38:28.018 pm' author 'Richo' ancestors ((name 'Uzi-Richo.30' message '* Renamed UziInterpreter to UziScriptInterpreter.* Added UziSimulator, which will be able to execute several scripts.' id '4ac6f507-591a-f445-9ae7-28087a3fa168' date '6 November 2014' time '11:47:27.71 am' author 'Richo' ancestors ((name 'Uzi-Richo.29' message '* Removed UziProgrammer because it was unnecesary given the existence of UziProtocol>>#install:' id '8f365f41-5326-f840-9ab9-5e1141b64b14' date '4 November 2014' time '10:33:50.774 am' author 'Richo' ancestors ((name 'Uzi-Richo.28' message '* Implemented encoding of JMP and JNZ bytecodes.' id 'd72ea341-ce64-e740-8c7c-f36d0ad9f520' date '30 October 2014' time '11:20:30.86 pm' author 'Richo' ancestors ((name 'Uzi-Richo.27' message '* Changed the way program inputs are encoded to use 3 bytes instead of 4. Since I''m working for the Arduino UNO (for now) it doesn''t make any sense to use that extra byte.' id '6ec3fc89-9def-c74a-a417-ce87f2b9745f' date '30 October 2014' time '10:24:06.013 pm' author 'Richo' ancestors ((name 'Uzi-Richo.26' message '* Changed UziProgram to be able to configure pin modes.* Added encoding of the program header (scripts count, and pin modes)' id 'f8042165-0a94-be44-9798-91f706ebcd27' date '30 October 2014' time '9:59:39.802 pm' author 'Richo' ancestors ((name 'Uzi-Richo.25' message '* Added very basic example scripts to Uzi class.* Changed default pin mode from 0 to 1 (I was mistakenly treating OUTPUT as 0).* Changed UziProtocol>>processPinValue to expect the most significant byte first, and also to scale it down from 0..1023 to 0..1.* Changed UziProtocol>>setPin:value: to scale up the value from 0..1 to 0..255.' id '506381d6-a340-0146-bc12-cf2d4a4dacbe' date '29 October 2014' time '5:49:27.728 pm' author 'Richo' ancestors ((name 'Uzi-Richo.24' message '* Implemented visitor pattern in JNZ and JMP bytecode classes.* Implemented JNZ and JMP in UziInterpreter.' id 'c80ae555-f83a-474c-9fdc-7f97ffbb86c5' date '28 October 2014' time '7:42:24.764 pm' author 'Richo' ancestors ((name 'Uzi-Richo.23' message '* Added grammar for blocks (without arguments, for now).* Added UziBlockNode.' id '72956b53-1bab-5447-83d4-944c11ddac36' date '28 October 2014' time '6:55:20.733 pm' author 'Richo' ancestors ((name 'Uzi-Richo.22' message '* Fixed a bug in UziProtocol>>setPin:mode: and setPin:value: (I wasn''t sending the pinNumber as one of the parameters).' id 'e368977a-982b-fe42-90ac-9ac48f5a14f5' date '28 October 2014' time '4:30:42.288 pm' author 'Richo' ancestors ((name 'Uzi-Richo.21' message '* Added UziProtocol, which will handle all communication with the Uzi firmware installed on the board.* Changed UziInterpreter and UziProgrammer to use an instance of UziProtocol (instead of a SerialPort and an Arduino, respectively).* Added UziSerialStream, a wrapper for the SerialPort that provides stream-like protocol.' id 'd6610a00-8b62-429b-a6d9-39b7cad6fca0' date '21 October 2014' time '8:24:42.642 pm' author 'Richo' ancestors ((name 'Uzi-Richo.20' message '* Removed #code from UziBytecode. This was no longer necessary due to the visitor pattern. Fixed #= and #hash' id '612e0e8f-3c68-484c-85f7-35ddec90783f' date '9 October 2014' time '6:18:58.354 pm' author 'Richo' ancestors ((name 'Uzi-Richo.19' message '* Reorganized the classes in order to remove categories with only one class.* Created UziPrimitive, which will hold a reference to all the valid primitives in the system.* Removed primitive stuff from Uzi class.* Changed all places where the creation of an UziPrimitiveCallBytecode used a number or a symbol as an argument. Now they must be an UziPrimitive instance.* Changed UziInterpreter to work as a visitor, removing some ugly switch statements.' id '8448eaf8-7299-4b26-8022-fa8152ee2bcd' date '9 October 2014' time '5:58:25.733 pm' author 'Richo' ancestors ((name 'Uzi-Richo.18' message '* Added utility methods to Uzi that help creating primitive call bytecodes.* Added UziProgrammer class, which would allow installing programs on the board.* Removed unused methods from UziScript (now replaced with UziEncoder).* Removed expected failures from UziTest.* Recategorized some methods here and there.' id '1939ebc8-a423-4b34-8e33-0bb513cc63b0' date '9 October 2014' time '4:43:03.817 pm' author 'Richo' ancestors ((name 'Uzi-Richo.17' message '* Improved the way the Uzi class should be used to build scripts. Now it''s much user friendly.* Reified literals. I will also do the same for all bytecode arguments (no more treating them as numbers).* Implemented the visitor pattern for compiled artifacts.* Added UziEncoder, which converts an UziScript into a ByteArray.' id '46973d78-cd8b-154b-993a-456b592e60ad' date '8 October 2014' time '7:02:24.463 pm' author 'Richo' ancestors ((name 'Uzi-Richo.16' message '* Starting to implement the UziScript transformation to ByteArray in order to send it to the board.' id '9e7df46e-9810-244b-a31e-844b52967a65' date '8 October 2014' time '4:18:07.792 pm' author 'Richo' ancestors ((name 'Uzi-Richo.15' message '* Starting to implement a simulator to test the programs before sending them to the board. This simulator currently uses the Arduino package with the old firmware, this must be changed in the future to use the new firmware.' id '89758358-c8a8-9d45-b738-d5699fb93116' date '7 October 2014' time '5:37:53.374 pm' author 'Richo' ancestors ((name 'Uzi-Richo.14' message '* Starting to implement conditionals in UziCompiler. Added an incomplete test for now.' id '8b9a028e-cebf-9f47-97f4-ae9fe77ff567' date '29 September 2014' time '7:47:30.448 pm' author 'Richo' ancestors ((name 'Uzi-Richo.13' message '* Added new bytecodes: JMP and JNZ.* Simplified Uzi code and removed UziBytecodeBuilder.' id 'decb96fd-fd98-a64d-a75b-27193fb591b6' date '29 September 2014' time '7:33:01.539 pm' author 'Richo' ancestors ((name 'Uzi-Richo.12' message '* Starting to implement the compiling of primitive calls and literal nodes. All tests green.' id '27a27cd7-47bd-964d-ac58-0d5bea7727fb' date '29 September 2014' time '6:48:00.364 pm' author 'Richo' ancestors ((name 'Uzi-Richo.11' message '* Starting to implement the bytecode hierarchy.* Added a facade class Uzi, that provides a simple way of building scripts. It will probably be used for testing and then removed.' id 'c9511d85-7e2d-7741-86dc-784a88b2bddb' date '29 September 2014' time '6:18:22.002 pm' author 'Richo' ancestors ((name 'Uzi-Richo.10' message '* Renamed some inst vars from UziScript.* Added a check to always add a terminate bytecode if the array is empty.' id '4874f08d-846e-6b4e-9112-8ddb8aabd293' date '25 September 2014' time '10:28:02.53 am' author 'Richo' ancestors ((name 'Uzi-Richo.9' message '* Starting to implement the compiler.* Added classes UziProgram and UziScript.' id '019206c6-6835-204c-bc8b-e336606d5968' date '23 September 2014' time '5:45:45.513 pm' author 'Richo' ancestors ((name 'Uzi-Richo.8' message '* Added parens.* Implemented script body as an array of statements.* Implemented primary as either a literal or parens.* Added a lot of tests.' id 'bc1030ae-5ce5-5543-8051-67c47caa2101' date '23 September 2014' time '4:28:51.262 pm' author 'Richo' ancestors ((name 'Uzi-Richo.7' message '* Added a new test for keyword expressions.' id '939b7ca3-1792-9747-b933-87599b453ca1' date '23 September 2014' time '1:30:03.969 pm' author 'Richo' ancestors ((name 'Uzi-Richo.6' message '* Added support for different scales in UziTickingRateNode.* Added UziScriptNode and UziMessageSendNode.* Added parser support for scripts and message sends.' id '7be1ce94-9aef-d04e-b226-c5c9fe427e67' date '23 September 2014' time '1:15:31.469 pm' author 'Richo' ancestors ((name 'Uzi-Richo.5' message '* Starting to implement the actual parser.* Created some basic node classes.' id 'aa0619cb-501b-49b6-aaea-4b639c4931c8' date '19 September 2014' time '8:18:32.729 pm' author 'Richo' ancestors ((name 'Uzi-Richo.4' message '* Fixed test: UziGrammarTest>>testKeywordExpression' id '26d4cc8b-8503-4f0f-9734-c1ed12210dc1' date '19 September 2014' time '7:34:04.414 pm' author 'Richo' ancestors ((name 'Uzi-Richo.3' message '* Added messages to the grammar.' id '2b1113b3-4352-6746-9b01-c7007b3a1ff6' date '17 September 2014' time '8:02:42.171 pm' author 'Richo' ancestors ((name 'Uzi-Richo.2' message '* Extended the grammar.' id 'c4dbda47-25d7-774d-9348-31eb2f93c6ca' date '16 September 2014' time '5:50:14.324 pm' author 'Richo' ancestors ((name 'Uzi-Richo.1' message 'Starting to implement a parser for the Uzi language.' id 'a926feb0-4ff6-6549-b1de-f1b7180dbc89' date '16 September 2014' time '4:58:57.615 pm' author 'Richo' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())