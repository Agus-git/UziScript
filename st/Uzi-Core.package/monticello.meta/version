(name 'Uzi-Core-Richo.76' message 'Removed unnecessary comment' id '344c975d-8484-e747-bf7c-8cb66470a513' date '8 May 2017' time '1:03:48.602 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.75' message 'Changed UziProtocol to process the new RS_TICKING_SCRIPTS message.' id 'a14880e6-a2fb-0140-b0de-641a4283142d' date '8 May 2017' time '1:00:47.446 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.74' message 'Fixed bug when parsing script calls.' id '417ae8cf-25aa-684f-ab12-d49eb353aaef' date '8 May 2017' time '11:23:11.689 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.73' message 'Added support in the parser for floating point non-numbers' id '771b636c-cd01-3e45-880d-3189cfa9a29b' date '8 May 2017' time '11:06:54.603 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.72' message 'empty log message' id '54e95cbf-c3c7-a648-b150-0f2600ca360f' date '7 May 2017' time '10:14:54.489 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.71' message 'Fixed compilation of assignment to local variables.' id 'c8f9b720-d252-ce40-a1e8-b4792608fe68' date '7 May 2017' time '7:13:55.233 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.70' message 'Added a validation that only allows script blocks to accept arguments.' id '4cb12b6e-3a5b-a444-ab62-c9ea96f2b3f0' date '7 May 2017' time '12:58:01.406 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.69' message 'Fixed compilation of script calls with explicit argument names.' id '469fe22a-b1dd-b445-8731-298d0c10ea88' date '7 May 2017' time '12:53:44.598 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.68' message 'Fixed bug when calling a script inside a loop condition but not in its last statement. In that specific case the pop instruction would not be automatically added and we would get a stack overflow.Now I changed how the UziLoopNode works and the code is simpler.' id '0889e462-62fc-1e47-b541-e0f667a37a15' date '6 May 2017' time '8:11:08.075 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.67' message 'Several changes to support script calls.- Changed UziCompiler to automatically support script calls either as expressions or statements.- Added a bunch of tests.- Removed the #run special message. Replaced by #value, which now works the same if we call it in the context of a statement.- Removed the "acceptReturnValue" inst var from UziScriptCallNode because now a script call works as expression or statement depending on the context.' id '7ae0627e-8eb5-e34b-bc5a-371ec887d3f3' date '2 May 2017' time '7:02:46.93 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.66' message 'Changed UziCompiler to allow reading script arguments.' id '0c0aab76-3ad7-914d-8cd6-3487c17cbbf2' date '1 May 2017' time '1:19:19.357 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.65' message 'Changed UziParser syntax to support block arguments.' id '49fdd323-85ce-8e4a-b656-e24dff030f86' date '8 April 2017' time '12:15:47.146 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.64' message 'Several changes. Details below.- Changed UziScript to have an array of locals.- Changed UziEncoder to use part of each script''s header to encode the number of locals.- Added UziReadLocalInstruction.- Changed UziScriptBuilder to allow specifying script arguments.- Fixed UziScriptBuilder>>#writeLocal:- Implemented UziScriptBuilder>>#readLocal:' id '633b7785-0aed-1342-9202-9c9801691b84' date '7 April 2017' time '11:35:44.313 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.63' message 'Implemented return statement. And fixed a couple of minor parser issues.' id '4f6a0172-9ccb-0f46-8e27-4236193398a6' date '6 April 2017' time '7:31:34.771 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.62' message 'Implemented UziScriptCallNode.' id '4866ba65-1786-9f4f-8ee5-e41fd230f6fa' date '5 April 2017' time '9:38:33.022 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.61' message 'Implemented UziWriteLocalInstruction.And removed UziDupInstruction.' id 'e4be2ff4-d0cc-0446-8761-adf50a6b281b' date '4 April 2017' time '7:15:25.557 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.60' message 'Changed UziPrimitive>>#primSpec to express the prim codes in hexa.' id '57a947df-ff1e-8341-926a-bac272aa2d29' date '4 April 2017' time '5:00:20.594 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.59' message 'Added primitive "pop"' id 'dc1b609e-c0aa-7d40-8225-d6ed82129e0b' date '3 April 2017' time '2:48:31.342 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.58' message 'Removed unused classes and fixed test.' id '740a9bf6-180c-be46-baa4-d707ee1ebec6' date '30 March 2017' time '11:32:15.677 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.57' message 'Implemented "scriptCall" instruction and "ret" primitive.' id '0bb79d87-e4c5-184e-8b7d-c7404f0f8f9e' date '30 March 2017' time '5:30:59.846 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.56' message 'Switched opcodes between UziDupInstruction and UziJmpInstruction.' id 'ef2dc371-45e1-6d4a-a24e-f5029e06ac50' date '30 March 2017' time '4:43:12.997 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.55' message 'Added a couple of validations for the new parse nodes.' id '1ace3a08-e498-2441-bc98-71a12b15f1c5' date '26 March 2017' time '9:43:25.027 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.54' message 'Implemented start/stop script syntax.' id 'dbc4e50a-dc24-b04e-aec8-cb1ccef336d4' date '26 March 2017' time '9:21:53.18 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.53' message 'Added special variable "millis"' id '17f80da9-2855-4943-ba0e-84a739caf896' date '26 March 2017' time '5:13:24.121 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.52' message 'Renamed special variable "time" to "seconds"' id 'a5dda9ea-16d1-154c-89d3-78384163f086' date '26 March 2017' time '5:01:57.969 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.51' message 'Uncommented some test code' id '98353ea5-07f3-614d-bc99-2531f13c6944' date '26 March 2017' time '11:55:10.883 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.50' message 'Fixed bug in UziParser that was leaving chained message sends without their token.' id '1ca8a45e-8541-9340-9288-c5abaa901a12' date '26 March 2017' time '11:39:29.359 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.49' message 'Fixed message send check.It was not checking that the receiver has to be an expression.' id '96b0647f-82c9-834c-b961-79fe95e36357' date '25 March 2017' time '10:54:29.902 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.48' message 'Added "until" loops.' id 'b9eaf334-33cd-8a4d-afde-0b4936bbde76' date '25 March 2017' time '9:55:03.877 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.47' message 'Small refactor.' id '11a9a2ed-26c0-884c-a885-d671e0d31577' date '25 March 2017' time '1:06:53.168 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.46' message 'Improved UziTypeError printing.Now it shows a little the source code where the error is detected.' id '9e204e21-0f6b-ab4b-8ae9-39bb1cf7a5d3' date '25 March 2017' time '12:03:38.381 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.45' message 'Implemented UziTypeChecker>>#visitLoopNode:' id '40c3352c-03b0-9442-8ece-09802c70cb6b' date '25 March 2017' time '11:47:55.915 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.44' message 'Implemented #doWhileTrue: and #doWhileFalse:Also, added a couple of tests. And improved compilation of loops (although the code is kind of a mess right now).' id 'a3d8407a-95db-3644-9eca-ab995dd19c1d' date '25 March 2017' time '12:20:35.005 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.43' message 'Implemented #whileTrue and #whileFalse (loop without body).' id '4db9d177-f513-374b-a464-e1ece293143b' date '24 March 2017' time '8:35:29.747 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.42' message 'Implemented #whileFalse:' id '2b3b4c86-b20d-3e4d-8656-a92fe470a6a2' date '24 March 2017' time '8:15:15.596 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.41' message 'Starting to implement loops (only #whileTrue: for now)' id '4fc31927-7e50-f64e-8a17-34ab27564f84' date '24 March 2017' time '7:48:11.991 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.40' message 'Updated UziPrimitive>>#primSpec accordingly.' id 'a08c85c9-284f-114a-a395-981da4e92fd5' date '24 March 2017' time '6:32:36.48 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.39' message 'Added special variable syntax.For now, only the #time special variable is implemented.I added a new primitive just for that.' id '5de62c92-ed6f-5749-8d53-72ac12129e7f' date '24 March 2017' time '6:08:47.903 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.38' message 'Fixed smalltalk tests.They were broken due to the syntax changes.' id '1d2a1f72-0440-fe40-b7f0-675657c4b371' date '24 March 2017' time '5:10:59.641 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.37' message 'Changed encoding of the arguments of branch instructions.Now it uses two''s complement, making it possible to jump backwards.' id 'f533b5d1-859a-c74d-807f-e17db4fa5480' date '24 March 2017' time '12:46:12.007 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.36' message 'Several changes.- Moved the "yield" and "yieldTime" up in the #primSpec.- Removed UziYieldInstruction.- Added UziDupInstruction.- Changed syntax to use ''@'' as prefix for script names.' id '28f43c5d-b158-e940-bc80-8b61aaacb239' date '24 March 2017' time '11:52:34.697 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.35' message 'Removed now unnecessary call to the Transcript.' id '177ece1e-4e58-bd4a-b83c-09f4d185c07a' date '24 March 2017' time '10:53:53.428 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.34' message '* Changed UziParser to filter out trailing blanks in the message send tokens. For this I added an extension PPToken>>#withoutTrailingBlanks.* Also added UziDebugger>>#isRunning' id 'aa4ed744-598f-e440-9c80-da2faeb8c903' date '13 January 2017' time '9:45:56.416 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.33' message '* Added UziDebugger class, which is responsible for keeping the state of a single coroutine and provides utility methods to control the step-by-step execution.* Changed UziProtocol to support the UziDebugger class.' id 'c163a3fc-0397-794a-9501-8b28cb52c672' date '9 January 2017' time '12:27:50.184 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.32' message '* Fixed compiler bug. Added tests.* Added a few accessing methods.' id '9432ec57-0e5b-884c-921b-153999c24df1' date '4 January 2017' time '2:08:38.398 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.31' message '* Changed UziProgram and UziScript to also have a reference to their corresponding node.* Removed UziScriptBuilder>>#withCurrentNode:do: because it seems to me that it''s the Compiler''s responsibility to know how to associate each instruction with its node.* Added a test that verifies the compiler preserves the parse nodes.' id 'e8b155f2-dc98-464c-bff9-9e93ec8f02b3' date '31 December 2016' time '8:28:38.401 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.30' message '* Fixed annoying parser bug with trailing spaces.' id '5124149f-4129-664b-9854-f881fbb90599' date '31 December 2016' time '2:42:51.268 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.29' message '* Added tests and fixed bug in UziTypeChecker.' id '85d54f9b-8158-2048-a749-41b8e5423f71' date '31 December 2016' time '2:11:13.265 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.28' message '* A couple of refactorings on UziTypeChecker.' id '187a780f-cd54-0748-8034-f93ebebd1643' date '31 December 2016' time '1:37:37.523 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.27' message '* Added UziTypeChecker. This class will check the correctness of the program.' id 'f5a56d04-1fb0-ad46-b2ab-07156467cf4f' date '31 December 2016' time '12:47:34.299 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.26' message 'Added support for the RS_COROUTINE_STATE message.For now, it simply dumps the vm state to the Transcript.' id 'a2591148-e267-254b-84d8-51581ffc4a65' date '28 December 2016' time '6:06:26.58 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.25' message '* Added UziProtocol>>setBreakCount:value:' id '5b293902-aaca-0145-8caa-635a1f6db01c' date '28 December 2016' time '4:18:20.523 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.24' message '* Changed UziInstruction to have a reference to the AST node which generated it.' id 'abe89ba8-9ec2-4547-9342-4d87fffff6b4' date '28 December 2016' time '1:19:38.164 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.23' message '* Changed the parser so that the nodes remember their token.' id 'a268b613-6814-eb4c-a098-2ad914889d75' date '27 December 2016' time '11:13:04.727 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.22' message 'Variable names stored as symbols (instead of strings)' id 'f7f72286-df6b-fe4f-bd26-e3c92bac90b1' date '22 December 2016' time '6:45:34.619 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.21' message '* Improved "printing" of compiled programs.It makes it easier to see them in inspectors and stuff.' id '3d917f23-86e0-e349-9fbc-a7a9e3956265' date '22 December 2016' time '6:38:41.122 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.20' message 'Simplified UziParser.As a result, I managed to remove UziGrammar, UziToken, and UziTokenParser.' id '2c3b0a46-9d64-ab40-81ef-4e23a0112bfe' date '22 December 2016' time '5:00:13.04 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.18' message '* Changed UziProtocol to understand the RS_TRACE message.' id 'c3f283a0-6c09-fe42-83cc-7e2e339278a0' date '21 December 2016' time '5:39:32 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.17' message '* Removed old reference to UziSimulator.' id 'ec6c3847-c4e9-a545-8539-443bfca00137' date '16 December 2016' time '9:00:13 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.16' message '* Added selector #msDelay, which maps to primitive #yieldTime' id 'f0f92dcd-ee23-f94f-8913-e00e596b183e' date '7 December 2016' time '12:06:48 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.15' message '* Added primitive #yieldTime to the list of primitives.' id '34026268-8205-6e45-9cc5-1ab4962d31e5' date '6 December 2016' time '11:55:38 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.14' message '* Added yield instruction.' id 'e8e9c550-b830-aa41-8e1b-e9bb9bc6f12e' date '6 December 2016' time '10:59:03 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.13' message '* Added UziProtocol>>#installCurrentProgram' id 'cd65c066-84fa-0446-91a1-4e3ae8755d25' date '6 December 2016' time '10:49:51 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.12' message '* Some fixes done on the CIITI 2016 Bs. As.' id '4da11776-7502-434b-a7fe-d7b0cd13d577' date '1 November 2016' time '4:45:06 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.11' message '* Changed the parser to allow variable definitions at the beginning of the program.' id '1522b0c8-ce60-4543-b567-cb7819c0c0ed' date '10 October 2016' time '4:25:43 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.10' message '* Fixed UziCompilerTest>>testBlinkLed9Script.* Removed from #expectedFailures.' id 'be88f94c-b694-c34b-a65a-18fc97a4796b' date '10 October 2016' time '1:47:04 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.9' message '* Changed UziGrammer to only allow #ticking as the tickingState.* Fixed tests.' id '0c819e01-24c1-594c-85af-828d915417f6' date '10 October 2016' time '11:51:45 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.8' message '* Removed unnecessary test class.' id '4b8a5775-1419-be4e-91d6-35603a9b64e8' date '10 October 2016' time '11:47:38 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.7' message '* Fixed test.' id 'f127263f-d021-5c4d-9067-e91d630e2433' date '10 October 2016' time '11:46:04 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.6' message '* Changed UziGrammar to make the ticking state optional.* Changed UziCompiler to set the ticking flag if the ticking rate is defined.* Added a test that I didn''t get a chance to run yet because the Etoys image does not seem to have a Test Runner.' id 'b779724c-5e5d-3647-a27e-f3779b7380d4' date '10 October 2016' time '11:43:33 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.5' message '* Removed EEPROM classes from Uzi-Core.' id 'b0f447e7-9b8e-e44b-9579-de649c0b16c4' date '10 October 2016' time '11:31:15 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.4' message '* Forgot to add the prefix to the EEPROM test classes.' id '7fc214cd-e5f9-4749-aca8-bf724c536a61' date '10 October 2016' time '11:28:40 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.3' message '* Added ''Uzi'' prefix to all the EEPROM classes.' id '0c85d662-1045-7249-bf54-1800f92c26b9' date '10 October 2016' time '11:27:13 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.2' message '* Removed Uzi-Simulator category.' id 'e618e359-47cd-fb4c-aa5b-7b8f13ea1f04' date '10 October 2016' time '11:16:35 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.1' message '* Copied all classes that don''t belong to the Uzi-Etoys package.' id '7a116038-0033-ba44-b520-79443574d92c' date '10 October 2016' time '11:14:46 am' author 'Richo' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())