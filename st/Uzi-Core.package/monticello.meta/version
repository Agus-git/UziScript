(name 'Uzi-Core-Richo.118' message 'Implemented declaration of variables.' id '61f6b924-f555-e043-a407-ce94974344d6' date '19 June 2017' time '9:59:06.753 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.117' message 'Fixed token of binary operations.' id '289f3355-0a88-394f-8185-63979a67da79' date '19 June 2017' time '9:49:31.503 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.116' message 'Fixed parser bug and added parens.' id '6f76437d-4980-d142-9b4f-6e5948a83f2a' date '19 June 2017' time '9:13:26.575 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.115' message 'Implemented syntax for operators.' id 'f0f4f16e-a405-c740-9ecf-cc921cab832c' date '19 June 2017' time '8:30:47.709 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.114' message 'Fixed test.' id '84ff41d6-25d6-dd48-b1d1-924da4230701' date '18 June 2017' time '8:10:31.587 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.113' message 'Refactored UziBlockNode.Removed the ''arguments'' inst var. Now the arguments are stored in the UziScriptNode.' id 'e9b3a9a4-928e-a54d-8afb-eca44734ee33' date '18 June 2017' time '8:03:08.123 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.112' message 'Added script state and ticking rate syntax.' id 'd0b8283b-8223-2b48-8ec0-d50e2746edb1' date '16 June 2017' time '9:15:17.151 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.111' message 'Implemented syntax for script''s body.' id '5c52a69c-197b-e343-b3c9-9ae37b9035ec' date '16 June 2017' time '9:04:15.803 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.110' message 'Starting to implement new script syntax.' id 'e11d7eeb-6a95-fe49-9e61-7f41bd0e039c' date '16 June 2017' time '8:37:01.883 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.109' message 'Small bugfix and test.' id '20851d65-1ce2-b441-aa2f-babd1a2d9fd1' date '16 June 2017' time '8:23:57.95 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.108' message 'Small changes.' id '5f56e8d4-79dc-bd42-abbf-7e9971f3e62f' date '16 June 2017' time '8:11:22.762 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.107' message 'Implemented function call syntax.' id 'e92b4f16-2425-324e-95e6-dc9c66b3c53c' date '16 June 2017' time '7:58:11.681 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.106' message 'Removed a couple of methods and changed a few methods.' id '747a11d0-77fa-4d47-9ac9-4ca85b2f3a7f' date '16 June 2017' time '7:20:52.484 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.105' message 'Removed UziSpecialVariableNode.I simply replaced it with an UziPrimitiveCallNode. I had to change the UziTypeChecker because when visiting primitive calls it was checking that the number of arguments matched the selector but with special variables they didn''t match.So now all UziPrimitives know how they affect the stack. I changed UziPrimitive>>#primSpec and added that info. I also removed the "isExpression" inst var because now it can be calculated by using the stack transition.' id 'b5385392-8e79-9e4e-a104-206ace29f193' date '16 June 2017' time '7:16:01.853 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.104' message 'Refactored UziMessageSendNode into UziPrimitiveCallNode.Apart from the name, the most important change is that UziPrimitiveCallNode doesn''t have a ''receiver'' inst var. Instead the receiver is the first argument. I had to change all the tests to make this work which was a pain in the ass...' id '96032fc0-611c-0d49-afa7-176b2c248f1a' date '16 June 2017' time '6:41:01.468 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.103' message 'Slowly starting to implement the new parser.' id 'b19a1f19-2654-0540-90ea-cd961e215462' date '16 June 2017' time '6:01:21.52 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.102' message 'Renamed UziParser to UziOldParser.Fixed references and also renamed UziParserTest to UziOldParserTest.' id 'a1e2b5b0-4948-7347-bda2-027d1ffae57e' date '16 June 2017' time '5:41:56.961 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.101' message 'Changed UziStackFrame>>#printOn: to avoid the ''@'' prefix.' id 'dbd6976b-9014-8840-ada9-09e0d7b61288' date '31 May 2017' time '8:13:15.957 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.100' message 'Fixed error with imported scripts argument names.The problem was that arguments and locals of imported scripts where being aliased. Now I changed the code that applies the alias to the parse tree to avoid applying the alias to local variables.' id '7c73dc8d-5668-2d45-8b3a-b6dfcd0a1d93' date '31 May 2017' time '8:09:21.658 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.99' message 'Implemented small optimization on the compiler.The short circuit on logical and/or nodes now it''s avoided if the right expression doesn''t have any side effect. This way we generate smaller code by relying on the logical and/or primitives.' id '7a238205-eaf2-4b4f-98bc-21c6552a5642' date '31 May 2017' time '6:58:37.776 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.98' message 'Renamed "ShortCircuit" nodes to simply "Logical".UziShortCircuitAndNode -> UziLogicalAndNodeUziShortCircuitOrNode -> UziLogicalOrNode.' id '685d7588-e213-6f46-a54b-1555895a6005' date '31 May 2017' time '6:39:41.211 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.97' message 'Added new primitives to the primSpec and parser.Also fixed a bug when encoding primitive calls whose argument is larger than 31.' id 'a9a7f664-c1c0-4c45-a6de-643c8c925d45' date '31 May 2017' time '6:33:19.733 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.96' message 'Implemented PRIM_COROUTINE compiling as a special variable.' id '83fa9eb0-d776-8e42-96e7-414fe8895e45' date '29 May 2017' time '1:46:43.843 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.95' message 'Implemented short-circuit logical operators && and ||' id '98363f19-8265-9743-9052-5593136c53b3' date '29 May 2017' time '11:14:39.98 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.94' message 'Improved importing failed error messages.' id '86036707-4a9c-d04c-8cfc-2848444e737b' date '29 May 2017' time '10:34:41.782 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.93' message 'Changed UziDebugger>>#sourceCode to take the code from the current instruction.Before it used the program''s source code but with the imported libraries this is no longer enough. Now, by looking at the current instruction we can get the actual source code even if we''re calling an imported library.' id '4635bfaa-44f1-de4d-835f-afc3c921e153' date '28 May 2017' time '10:58:03.946 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.92' message 'Implemented library imports.The UziParser will now recursively parse all the imported files.' id '262bc8b7-4e72-f746-bdc0-3b7cabcd3889' date '27 May 2017' time '11:11:48.975 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.91' message 'Starting to implement library imports.For now, I only modified the parser to include the new syntax.' id 'ee9630bf-c2b2-3146-8516-1a6f43d32a69' date '26 May 2017' time '10:00:35.039 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.90' message 'Improved error message a little.' id '5328561a-78c1-fe4e-b271-4e3e32579762' date '23 May 2017' time '11:06:27.652 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.89' message 'Changed UziProtocol>>#processError to show a more descriptive error on the Transcript' id '99b9ea7a-473f-f148-9c51-70ec1baab7ce' date '23 May 2017' time '10:50:38.888 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.88' message 'Added a couple of accessors to UziStackFrame and refactored UziDebugger a little.' id 'c0bc35ce-1b69-664a-8d6d-6de6566446b7' date '21 May 2017' time '3:34:54.709 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.87' message 'Added UziStackFrame class and UziDebugger>>#stackFrames.I moved both UziDebugger and UziStackFrame to their own class category ''Uzi-Core-Debugging''.Also, I fixed a bug when writing/reading floats from the serial. I was under the impression that Float>>#asIEEE32BitWord and Float>>#fromIEEE32Bit: were symmetrical but somehow this wasn''t the case. I don''t know, maybe I messed up. Anyway, the bug was that some elements on the stack (the return address and frame pointer) were not correct so I was not able to correctly interpret the stack to build all the stack frames. Now I started using FloatArray to perform the conversions and everything works.' id 'c764ef1b-18fa-e049-9b76-cf5b931ff839' date '21 May 2017' time '2:58:10.87 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.86' message 'Changed UziProtocol>>#processCoroutineState to also process the frame pointer.I changed UziDebugger to accept the frame pointer and I used that to interpret the stack and get the current value of all the local variables (UziDebugger>>#locals).I also fixed a small bug in UziProgramPrinter>>#visitWriteLocalInstruction:' id '35f0b89a-9874-8e49-bda9-5dd56560b2a4' date '20 May 2017' time '8:33:31.214 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.85' message 'Fixed bug when opening the debugger while the protocol is not connected.' id 'aad29d99-ad4c-164a-af99-13df9495a128' date '20 May 2017' time '7:50:38.866 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.84' message 'Changed UziProgramPrinter to remember which string it printed for each instruction.Also, a small fix in the UziInstruction>>#hash method. And added #currentProgram method to UziProtocol and UziDebugger.' id '4c061cce-445a-2743-9437-da9d3d4ad0da' date '20 May 2017' time '6:52:09.836 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.83' message 'Fixed a couple of bugs introduced in the previous commits.' id '3e3009d9-2b87-aa49-8bd6-5a0f3eac36e6' date '20 May 2017' time '3:55:38.186 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.82' message 'Implemented UziProgramPrinter.This class allows me produce a textual representation of a compiled program. I decided the textual representation should be exactly the same as the code you would write in Smalltalk to build the program.' id '63e3423f-e33b-7547-8d0c-555228b7937d' date '20 May 2017' time '3:03:07.89 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.81' message 'Small refactoring in the builders code.I renamed UziProgramBuilder>>#registerVariable: to #registerGlobal: (since we now have variables with different scope). I added UziScriptBuilder>>#registerArgument: and UziScriptBuilder>>#registerLocal:, so now defining these variables is not required to create a script builder.' id 'e0ba7f76-e93f-ed4d-b485-f3e43f1cbe9c' date '13 May 2017' time '6:20:46.085 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.80' message 'Implemented support for local variables.The syntax is similar to smalltalk in that it uses the pipe character $| to enclose the declarations but it allows to specify the default values for each variable.The compiler for now simply treats them exactly like arguments so the generated code is not really optimal.Also, now the global variables must be declared or the compilation fails.' id '29639b48-7578-3848-a08a-8af60ba8dc0a' date '11 May 2017' time '7:22:35.672 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.79' message 'Changed UziTypeChecker to force the user to define all variables.' id '21a6acab-0b43-d64a-9d05-c98b9d2e504f' date '8 May 2017' time '6:15:13.908 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.78' message 'Changed variable definition syntax to use 0 as default value' id '33b32fa9-0413-f741-9f7e-fe248c71ec11' date '8 May 2017' time '5:51:06.058 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.77' message 'Changed variable definition syntax' id 'e4ff2e4f-7527-394d-9b98-287f46908abe' date '8 May 2017' time '5:44:14.733 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.76' message 'Removed unnecessary comment' id '344c975d-8484-e747-bf7c-8cb66470a513' date '8 May 2017' time '1:03:48.602 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.75' message 'Changed UziProtocol to process the new RS_TICKING_SCRIPTS message.' id 'a14880e6-a2fb-0140-b0de-641a4283142d' date '8 May 2017' time '1:00:47.446 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.74' message 'Fixed bug when parsing script calls.' id '417ae8cf-25aa-684f-ab12-d49eb353aaef' date '8 May 2017' time '11:23:11.689 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.73' message 'Added support in the parser for floating point non-numbers' id '771b636c-cd01-3e45-880d-3189cfa9a29b' date '8 May 2017' time '11:06:54.603 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.72' message 'empty log message' id '54e95cbf-c3c7-a648-b150-0f2600ca360f' date '7 May 2017' time '10:14:54.489 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.71' message 'Fixed compilation of assignment to local variables.' id 'c8f9b720-d252-ce40-a1e8-b4792608fe68' date '7 May 2017' time '7:13:55.233 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.70' message 'Added a validation that only allows script blocks to accept arguments.' id '4cb12b6e-3a5b-a444-ab62-c9ea96f2b3f0' date '7 May 2017' time '12:58:01.406 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.69' message 'Fixed compilation of script calls with explicit argument names.' id '469fe22a-b1dd-b445-8731-298d0c10ea88' date '7 May 2017' time '12:53:44.598 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.68' message 'Fixed bug when calling a script inside a loop condition but not in its last statement. In that specific case the pop instruction would not be automatically added and we would get a stack overflow.Now I changed how the UziLoopNode works and the code is simpler.' id '0889e462-62fc-1e47-b541-e0f667a37a15' date '6 May 2017' time '8:11:08.075 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.67' message 'Several changes to support script calls.- Changed UziCompiler to automatically support script calls either as expressions or statements.- Added a bunch of tests.- Removed the #run special message. Replaced by #value, which now works the same if we call it in the context of a statement.- Removed the "acceptReturnValue" inst var from UziScriptCallNode because now a script call works as expression or statement depending on the context.' id '7ae0627e-8eb5-e34b-bc5a-371ec887d3f3' date '2 May 2017' time '7:02:46.93 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.66' message 'Changed UziCompiler to allow reading script arguments.' id '0c0aab76-3ad7-914d-8cd6-3487c17cbbf2' date '1 May 2017' time '1:19:19.357 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.65' message 'Changed UziParser syntax to support block arguments.' id '49fdd323-85ce-8e4a-b656-e24dff030f86' date '8 April 2017' time '12:15:47.146 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.64' message 'Several changes. Details below.- Changed UziScript to have an array of locals.- Changed UziEncoder to use part of each script''s header to encode the number of locals.- Added UziReadLocalInstruction.- Changed UziScriptBuilder to allow specifying script arguments.- Fixed UziScriptBuilder>>#writeLocal:- Implemented UziScriptBuilder>>#readLocal:' id '633b7785-0aed-1342-9202-9c9801691b84' date '7 April 2017' time '11:35:44.313 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.63' message 'Implemented return statement. And fixed a couple of minor parser issues.' id '4f6a0172-9ccb-0f46-8e27-4236193398a6' date '6 April 2017' time '7:31:34.771 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.62' message 'Implemented UziScriptCallNode.' id '4866ba65-1786-9f4f-8ee5-e41fd230f6fa' date '5 April 2017' time '9:38:33.022 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.61' message 'Implemented UziWriteLocalInstruction.And removed UziDupInstruction.' id 'e4be2ff4-d0cc-0446-8761-adf50a6b281b' date '4 April 2017' time '7:15:25.557 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.60' message 'Changed UziPrimitive>>#primSpec to express the prim codes in hexa.' id '57a947df-ff1e-8341-926a-bac272aa2d29' date '4 April 2017' time '5:00:20.594 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.59' message 'Added primitive "pop"' id 'dc1b609e-c0aa-7d40-8225-d6ed82129e0b' date '3 April 2017' time '2:48:31.342 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.58' message 'Removed unused classes and fixed test.' id '740a9bf6-180c-be46-baa4-d707ee1ebec6' date '30 March 2017' time '11:32:15.677 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.57' message 'Implemented "scriptCall" instruction and "ret" primitive.' id '0bb79d87-e4c5-184e-8b7d-c7404f0f8f9e' date '30 March 2017' time '5:30:59.846 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.56' message 'Switched opcodes between UziDupInstruction and UziJmpInstruction.' id 'ef2dc371-45e1-6d4a-a24e-f5029e06ac50' date '30 March 2017' time '4:43:12.997 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.55' message 'Added a couple of validations for the new parse nodes.' id '1ace3a08-e498-2441-bc98-71a12b15f1c5' date '26 March 2017' time '9:43:25.027 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.54' message 'Implemented start/stop script syntax.' id 'dbc4e50a-dc24-b04e-aec8-cb1ccef336d4' date '26 March 2017' time '9:21:53.18 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.53' message 'Added special variable "millis"' id '17f80da9-2855-4943-ba0e-84a739caf896' date '26 March 2017' time '5:13:24.121 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.52' message 'Renamed special variable "time" to "seconds"' id 'a5dda9ea-16d1-154c-89d3-78384163f086' date '26 March 2017' time '5:01:57.969 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.51' message 'Uncommented some test code' id '98353ea5-07f3-614d-bc99-2531f13c6944' date '26 March 2017' time '11:55:10.883 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.50' message 'Fixed bug in UziParser that was leaving chained message sends without their token.' id '1ca8a45e-8541-9340-9288-c5abaa901a12' date '26 March 2017' time '11:39:29.359 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.49' message 'Fixed message send check.It was not checking that the receiver has to be an expression.' id '96b0647f-82c9-834c-b961-79fe95e36357' date '25 March 2017' time '10:54:29.902 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.48' message 'Added "until" loops.' id 'b9eaf334-33cd-8a4d-afde-0b4936bbde76' date '25 March 2017' time '9:55:03.877 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.47' message 'Small refactor.' id '11a9a2ed-26c0-884c-a885-d671e0d31577' date '25 March 2017' time '1:06:53.168 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.46' message 'Improved UziTypeError printing.Now it shows a little the source code where the error is detected.' id '9e204e21-0f6b-ab4b-8ae9-39bb1cf7a5d3' date '25 March 2017' time '12:03:38.381 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.45' message 'Implemented UziTypeChecker>>#visitLoopNode:' id '40c3352c-03b0-9442-8ece-09802c70cb6b' date '25 March 2017' time '11:47:55.915 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.44' message 'Implemented #doWhileTrue: and #doWhileFalse:Also, added a couple of tests. And improved compilation of loops (although the code is kind of a mess right now).' id 'a3d8407a-95db-3644-9eca-ab995dd19c1d' date '25 March 2017' time '12:20:35.005 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.43' message 'Implemented #whileTrue and #whileFalse (loop without body).' id '4db9d177-f513-374b-a464-e1ece293143b' date '24 March 2017' time '8:35:29.747 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.42' message 'Implemented #whileFalse:' id '2b3b4c86-b20d-3e4d-8656-a92fe470a6a2' date '24 March 2017' time '8:15:15.596 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.41' message 'Starting to implement loops (only #whileTrue: for now)' id '4fc31927-7e50-f64e-8a17-34ab27564f84' date '24 March 2017' time '7:48:11.991 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.40' message 'Updated UziPrimitive>>#primSpec accordingly.' id 'a08c85c9-284f-114a-a395-981da4e92fd5' date '24 March 2017' time '6:32:36.48 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.39' message 'Added special variable syntax.For now, only the #time special variable is implemented.I added a new primitive just for that.' id '5de62c92-ed6f-5749-8d53-72ac12129e7f' date '24 March 2017' time '6:08:47.903 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.38' message 'Fixed smalltalk tests.They were broken due to the syntax changes.' id '1d2a1f72-0440-fe40-b7f0-675657c4b371' date '24 March 2017' time '5:10:59.641 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.37' message 'Changed encoding of the arguments of branch instructions.Now it uses two''s complement, making it possible to jump backwards.' id 'f533b5d1-859a-c74d-807f-e17db4fa5480' date '24 March 2017' time '12:46:12.007 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.36' message 'Several changes.- Moved the "yield" and "yieldTime" up in the #primSpec.- Removed UziYieldInstruction.- Added UziDupInstruction.- Changed syntax to use ''@'' as prefix for script names.' id '28f43c5d-b158-e940-bc80-8b61aaacb239' date '24 March 2017' time '11:52:34.697 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.35' message 'Removed now unnecessary call to the Transcript.' id '177ece1e-4e58-bd4a-b83c-09f4d185c07a' date '24 March 2017' time '10:53:53.428 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.34' message '* Changed UziParser to filter out trailing blanks in the message send tokens. For this I added an extension PPToken>>#withoutTrailingBlanks.* Also added UziDebugger>>#isRunning' id 'aa4ed744-598f-e440-9c80-da2faeb8c903' date '13 January 2017' time '9:45:56.416 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.33' message '* Added UziDebugger class, which is responsible for keeping the state of a single coroutine and provides utility methods to control the step-by-step execution.* Changed UziProtocol to support the UziDebugger class.' id 'c163a3fc-0397-794a-9501-8b28cb52c672' date '9 January 2017' time '12:27:50.184 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.32' message '* Fixed compiler bug. Added tests.* Added a few accessing methods.' id '9432ec57-0e5b-884c-921b-153999c24df1' date '4 January 2017' time '2:08:38.398 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.31' message '* Changed UziProgram and UziScript to also have a reference to their corresponding node.* Removed UziScriptBuilder>>#withCurrentNode:do: because it seems to me that it''s the Compiler''s responsibility to know how to associate each instruction with its node.* Added a test that verifies the compiler preserves the parse nodes.' id 'e8b155f2-dc98-464c-bff9-9e93ec8f02b3' date '31 December 2016' time '8:28:38.401 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.30' message '* Fixed annoying parser bug with trailing spaces.' id '5124149f-4129-664b-9854-f881fbb90599' date '31 December 2016' time '2:42:51.268 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.29' message '* Added tests and fixed bug in UziTypeChecker.' id '85d54f9b-8158-2048-a749-41b8e5423f71' date '31 December 2016' time '2:11:13.265 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.28' message '* A couple of refactorings on UziTypeChecker.' id '187a780f-cd54-0748-8034-f93ebebd1643' date '31 December 2016' time '1:37:37.523 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.27' message '* Added UziTypeChecker. This class will check the correctness of the program.' id 'f5a56d04-1fb0-ad46-b2ab-07156467cf4f' date '31 December 2016' time '12:47:34.299 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.26' message 'Added support for the RS_COROUTINE_STATE message.For now, it simply dumps the vm state to the Transcript.' id 'a2591148-e267-254b-84d8-51581ffc4a65' date '28 December 2016' time '6:06:26.58 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.25' message '* Added UziProtocol>>setBreakCount:value:' id '5b293902-aaca-0145-8caa-635a1f6db01c' date '28 December 2016' time '4:18:20.523 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.24' message '* Changed UziInstruction to have a reference to the AST node which generated it.' id 'abe89ba8-9ec2-4547-9342-4d87fffff6b4' date '28 December 2016' time '1:19:38.164 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.23' message '* Changed the parser so that the nodes remember their token.' id 'a268b613-6814-eb4c-a098-2ad914889d75' date '27 December 2016' time '11:13:04.727 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.22' message 'Variable names stored as symbols (instead of strings)' id 'f7f72286-df6b-fe4f-bd26-e3c92bac90b1' date '22 December 2016' time '6:45:34.619 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.21' message '* Improved "printing" of compiled programs.It makes it easier to see them in inspectors and stuff.' id '3d917f23-86e0-e349-9fbc-a7a9e3956265' date '22 December 2016' time '6:38:41.122 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.20' message 'Simplified UziParser.As a result, I managed to remove UziGrammar, UziToken, and UziTokenParser.' id '2c3b0a46-9d64-ab40-81ef-4e23a0112bfe' date '22 December 2016' time '5:00:13.04 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.18' message '* Changed UziProtocol to understand the RS_TRACE message.' id 'c3f283a0-6c09-fe42-83cc-7e2e339278a0' date '21 December 2016' time '5:39:32 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.17' message '* Removed old reference to UziSimulator.' id 'ec6c3847-c4e9-a545-8539-443bfca00137' date '16 December 2016' time '9:00:13 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.16' message '* Added selector #msDelay, which maps to primitive #yieldTime' id 'f0f92dcd-ee23-f94f-8913-e00e596b183e' date '7 December 2016' time '12:06:48 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.15' message '* Added primitive #yieldTime to the list of primitives.' id '34026268-8205-6e45-9cc5-1ab4962d31e5' date '6 December 2016' time '11:55:38 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.14' message '* Added yield instruction.' id 'e8e9c550-b830-aa41-8e1b-e9bb9bc6f12e' date '6 December 2016' time '10:59:03 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.13' message '* Added UziProtocol>>#installCurrentProgram' id 'cd65c066-84fa-0446-91a1-4e3ae8755d25' date '6 December 2016' time '10:49:51 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.12' message '* Some fixes done on the CIITI 2016 Bs. As.' id '4da11776-7502-434b-a7fe-d7b0cd13d577' date '1 November 2016' time '4:45:06 pm' author 'Richo' ancestors ((name 'Uzi-Core-Richo.11' message '* Changed the parser to allow variable definitions at the beginning of the program.' id '1522b0c8-ce60-4543-b567-cb7819c0c0ed' date '10 October 2016' time '4:25:43 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.10' message '* Fixed UziCompilerTest>>testBlinkLed9Script.* Removed from #expectedFailures.' id 'be88f94c-b694-c34b-a65a-18fc97a4796b' date '10 October 2016' time '1:47:04 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.9' message '* Changed UziGrammer to only allow #ticking as the tickingState.* Fixed tests.' id '0c819e01-24c1-594c-85af-828d915417f6' date '10 October 2016' time '11:51:45 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.8' message '* Removed unnecessary test class.' id '4b8a5775-1419-be4e-91d6-35603a9b64e8' date '10 October 2016' time '11:47:38 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.7' message '* Fixed test.' id 'f127263f-d021-5c4d-9067-e91d630e2433' date '10 October 2016' time '11:46:04 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.6' message '* Changed UziGrammar to make the ticking state optional.* Changed UziCompiler to set the ticking flag if the ticking rate is defined.* Added a test that I didn''t get a chance to run yet because the Etoys image does not seem to have a Test Runner.' id 'b779724c-5e5d-3647-a27e-f3779b7380d4' date '10 October 2016' time '11:43:33 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.5' message '* Removed EEPROM classes from Uzi-Core.' id 'b0f447e7-9b8e-e44b-9579-de649c0b16c4' date '10 October 2016' time '11:31:15 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.4' message '* Forgot to add the prefix to the EEPROM test classes.' id '7fc214cd-e5f9-4749-aca8-bf724c536a61' date '10 October 2016' time '11:28:40 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.3' message '* Added ''Uzi'' prefix to all the EEPROM classes.' id '0c85d662-1045-7249-bf54-1800f92c26b9' date '10 October 2016' time '11:27:13 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.2' message '* Removed Uzi-Simulator category.' id 'e618e359-47cd-fb4c-aa5b-7b8f13ea1f04' date '10 October 2016' time '11:16:35 am' author 'Richo' ancestors ((name 'Uzi-Core-Richo.1' message '* Copied all classes that don''t belong to the Uzi-Etoys package.' id '7a116038-0033-ba44-b520-79443574d92c' date '10 October 2016' time '11:14:46 am' author 'Richo' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())