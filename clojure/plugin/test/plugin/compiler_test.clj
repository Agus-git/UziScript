(ns plugin.compiler-test
  (:require [clojure.test :refer :all]
            [plugin.compiler.ast-utils :as ast-utils]
            [plugin.compiler.core :as compiler :refer [compile-tree]])
  (:use [plugin.test-utils]))

(deftest empty-program-test
  (let [ast {:__class__ "UziProgramNode",
             :scripts [{:__class__ "UziTaskNode",
                        :name "empty",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements []}}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [],
                             :locals [],
                             :name "empty",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 1000}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-global-variable-test
  (let [ast {:__class__ "UziProgramNode",
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "counter"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "empty",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "counter"},
                                             :right {:__class__ "UziCallNode",
                                                     :selector "+",
                                                     :arguments [{:__class__ "Association",
                                                                  :value {:__class__ "UziVariableNode",
                                                                          :name "counter"}},
                                                                 {:__class__ "Association",
                                                                  :value {:__class__ "UziNumberLiteralNode",
                                                                          :value 1}}]}}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "counter",
                                                        ;:value 0
                                                        }},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        ;:code 6,
                                                        :name "add",
                                                        ;:stackTransition {:__class__ "Association",
                                                        ;                  :key 2,
                                                        ;                  :value 1}
                                                        }},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "counter",
                                                        ;:value 0
                                                        }}],
                             :locals [],
                             :name "empty",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :name "counter",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 1000},
                               {:__class__ "UziVariable",
                                :value 1}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest task-without-ticking-rate
  (let [ast {:__class__ "UziProgramNode",
             :scripts [{:__class__ "UziTaskNode",,
                        :name "foo",
                        :arguments [],
                        :state "running",
                        :body {:__class__ "UziBlockNode",
                               :statements []}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [],
                             :locals [],
                             :name "foo",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                               :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest task-with-once
  (let [ast {:__class__ "UziProgramNode",
             :scripts [{:__class__ "UziTaskNode",,
                        :name "foo",
                        :arguments [],
                        :state "once",
                        :body {:__class__ "UziBlockNode",
                               :statements []}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziStopScriptInstruction",
                                             :argument "foo"}],
                             :locals [],
                             :name "foo",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest program-with-local-variable
  (let [ast {:__class__ "UziProgramNode",
             :scripts [{:__class__ "UziTaskNode",
                        :name "foo",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziVariableDeclarationNode",
                                             :name "pin",
                                             :value {:__class__ "UziPinLiteralNode",
                                                     :type "D",
                                                     :number 13}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "pin"}}]}]}}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :name "foo",
                             :ticking true,
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :locals [{:__class__ "UziVariable",
                                       :name "pin#1",
                                       :value 0}],
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziWriteLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "pin#1",}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "pin#1"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        ;:code 2,
                                                        :name "toggle",
                                                        ;:stackTransition {:__class__ "Association",
                                                        ;                  :key 1,
                                                        ;                  :value 0}
                                                        }},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "foo"}]}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest ast-transform-test
  (let [original {:__class__ "UziProgramNode",
                  :scripts [{:__class__ "UziTaskNode",
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 12}}]}]}}]}
        expected {:__class__ "UziProgramNode",
                  :__foo__ 1,
                  :scripts [{:__class__ "UziTaskNode",
                             :__foo__ 2,
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :__bar__ 5,
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :__bar__ 5,
                                    :statements [{:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :__bar__ 5,
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :__bar__ 5,
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4,
                                                                       :value 12}}]}]}}]}
        actual (ast-utils/transform
                original
                "UziProgramNode" #(assoc % :__foo__ 1)
                "UziTaskNode" #(assoc % :__foo__ 2)
                "UziCallNode" #(assoc % :__foo__ 3)
                "UziNumberLiteralNode" #(assoc % :__foo__ 4)
                :default #(assoc % :__bar__ 5))]
    (is (= expected actual))))

(deftest ast-transform-without-default-clause
  (let [original {:__class__ "UziProgramNode",
                  :scripts [{:__class__ "UziTaskNode",
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 12}}]}]}}]}
        expected {:__class__ "UziProgramNode",
                  :__foo__ 1,
                  :scripts [{:__class__ "UziTaskNode",
                             :__foo__ 2,
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4,
                                                                       :value 12}}]}]}}]}
        actual (ast-utils/transform
                original
                "UziProgramNode" #(assoc % :__foo__ 1)
                "UziTaskNode" #(assoc % :__foo__ 2)
                "UziCallNode" #(assoc % :__foo__ 3)
                "UziNumberLiteralNode" #(assoc % :__foo__ 4))]
    (is (= expected actual))))

(deftest ast-transform-pred-test
  (let [original {:__class__ "UziProgramNode",
                  :scripts [{:__class__ "UziTaskNode",
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 12}}]}]}}]}
        expected {:__class__ "UziProgramNode",
                  :__foo__ 1,
                  :scripts [{:__class__ "UziTaskNode",
                             :__foo__ 2,
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :__bar__ 5,
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :__bar__ 5,
                                    :statements [{:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :__bar__ 5,
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :__bar__ 5,
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4,
                                                                       :value 12}}]}]}}]}
        actual (ast-utils/transform-pred
                original
                #(= "UziProgramNode" (get % :__class__)) #(assoc % :__foo__ 1)
                #(= "UziTaskNode" (get % :__class__)) #(assoc % :__foo__ 2)
                #(= "UziCallNode" (get % :__class__)) #(assoc % :__foo__ 3)
                #(= "UziNumberLiteralNode" (get % :__class__)) #(assoc % :__foo__ 4)
                :default #(assoc % :__bar__ 5))]
    (is (= expected actual))))

(deftest ast-transform-pred-without-default-clause
  (let [original {:__class__ "UziProgramNode",
                  :scripts [{:__class__ "UziTaskNode",
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :value 12}}]}]}}]}
        expected {:__class__ "UziProgramNode",
                  :__foo__ 1,
                  :scripts [{:__class__ "UziTaskNode",
                             :__foo__ 2,
                             :name "empty",
                             :arguments [],
                             :state "running",
                             :tickingRate {:__class__ "UziTickingRateNode",
                                           :value 1,
                                           :scale "s"},
                             :body {:__class__ "UziBlockNode",
                                    :statements [{:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "toggle",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4
                                                                       :value 13}}]},
                                                 {:__class__ "UziCallNode",
                                                  :__foo__ 3,
                                                  :selector "turnOn",
                                                  :arguments [{:__class__ "Association",
                                                               :key nil,
                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                       :__foo__ 4,
                                                                       :value 12}}]}]}}]}
        actual (ast-utils/transform-pred
                original
                #(= "UziProgramNode" (get % :__class__)) #(assoc % :__foo__ 1)
                #(= "UziTaskNode" (get % :__class__)) #(assoc % :__foo__ 2)
                #(= "UziCallNode" (get % :__class__)) #(assoc % :__foo__ 3)
                #(= "UziNumberLiteralNode" (get % :__class__)) #(assoc % :__foo__ 4))]
    (is (= expected actual))))

(deftest program-with-local-variable-whose-value-is-a-compile-time-constant
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziVariableDeclarationNode",
                                             :name "a",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 0}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "a"}}]},
                                            {:__class__ "UziVariableDeclarationNode",
                                             :name "b",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 0}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "b"}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "a#1"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "b#2"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [{:__class__ "UziVariable",
                                       :name "a#1",
                                       :value 0},
                                      {:__class__ "UziVariable",
                                       :name "b#2",
                                       :value 0}],
                             :name "default",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable" :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-local-variable-whose-value-is-a-compile-time-constant-different-than-zero
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziVariableDeclarationNode",
                                             :name "a",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 1}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "a"}}]},
                                            {:__class__ "UziVariableDeclarationNode",
                                             :name "b",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 2}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "b"}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "a#1"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "b#2"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle",}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [{:__class__ "UziVariable",
                                       :name "a#1",
                                       :value 1},
                                      {:__class__ "UziVariable",
                                       :name "b#2",
                                       :value 2}],
                             :name "default",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 1},
                               {:__class__ "UziVariable", :value 2}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-equal-nodes-referencing-different-variables
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "b"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziVariableDeclarationNode",
                                             :name "a",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 1}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "b"}}]},
                                            {:__class__ "UziVariableDeclarationNode",
                                             :name "b",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 2}},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "b"}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "b"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "b#2"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [{:__class__ "UziVariable",
                                       :name "a#1",
                                       :value 1},
                                      {:__class__ "UziVariable",
                                       :name "b#2",
                                       :value 2}],
                             :name "default",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :name "b", :value 0},
                               {:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 1},
                               {:__class__ "UziVariable", :value 2}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-assignment-to-global
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "temp"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "temp"},
                                             :right {:__class__ "UziNumberLiteralNode",
                                                     :value 0}}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 0}},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "temp",
                                                        :value 0}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :name "temp", :value 0},
                               {:__class__ "UziVariable", :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-assignment-to-local
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziVariableDeclarationNode",
                                             :name "temp",
                                             :value {:__class__ "UziNumberLiteralNode",
                                                     :value 0}},
                                            {:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "temp"},
                                             :right {:__class__ "UziNumberLiteralNode",
                                                     :value 0}}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 0}},
                                            {:__class__ "UziWriteLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "temp#1",
                                                        :value 0}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [{:__class__ "UziVariable",
                                       :name "temp#1",
                                       :value 0}],
                             :name "default",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-procedure
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "default1",
                                             :arguments []}]}},
                       {:__class__ "UziProcedureNode",
                        :name "default1",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements []}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-procedure-call-before-the-end-of-block
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "default1",
                                             :arguments []},
                                            {:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :type "D",
                                                                  :number 13}}]}]}},
                       {:__class__ "UziProcedureNode",
                        :name "default1",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements []}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest procedure-with-one-argument
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "default1",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :type "D",
                                                                  :number 13}}]}]}},
                       {:__class__ "UziProcedureNode",
                        :name "default1",
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "arg0"}],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "arg0"}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "arg0#1",
                                          :value 0}],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "arg0#1",
                                                        :value 0}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}}],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest program-with-function
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "temp"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "temp"},
                                             :right {:__class__ "UziCallNode",
                                                     :selector "default1",
                                                     :arguments []}}]}},
                       {:__class__ "UziFunctionNode",
                        :name "default1",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements []}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "temp",
                                                        :value 0}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :name "temp", :value 0},
                               {:__class__ "UziVariable", :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest function-with-one-arg
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "temp"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "temp"},
                                             :right {:__class__ "UziCallNode",
                                                     :selector "default1",
                                                     :arguments [{:__class__ "Association",
                                                                  :key nil,
                                                                  :value {:__class__ "UziPinLiteralNode",
                                                                          :type "D",
                                                                          :number 13}}]}}]}},
                       {:__class__ "UziFunctionNode",
                        :name "default1",
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "arg0"}],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "arg0"}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable", :name "temp"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "arg0#1",
                                          :value 0}],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "arg0#1",}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}}],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable",
                                :name "temp",
                                :value 0},
                               {:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest the-order-of-the-keys-in-a-program-map-should-not-matter
  (let [ast {:__class__ "UziProgramNode",
             :scripts [{:__class__ "UziTaskNode",
                        :name "empty",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "counter"},
                                             :right {:__class__ "UziCallNode",
                                                     :selector "+",
                                                     :arguments [{:__class__ "Association",
                                                                  :value {:__class__ "UziVariableNode",
                                                                          :name "counter"}},
                                                                 {:__class__ "Association",
                                                                  :value {:__class__ "UziNumberLiteralNode",
                                                                          :value 1}}]}}]}}],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "counter"}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "counter",
                                                        ;:value 0
                                                        }},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        ;:code 6,
                                                        :name "add",
                                                        ;:stackTransition {:__class__ "Association",
                                                        ;                  :key 2,
                                                        ;                  :value 1}
                                                        }},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "counter",
                                                        ;:value 0
                                                        }}],
                             :locals [],
                             :name "empty",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :name "counter",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 1000},
                               {:__class__ "UziVariable",
                                :value 1}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest the-order-of-the-keys-in-a-procedure-map-should-not-matter
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "default1",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :type "D",
                                                                  :number 13}}]}]}},
                       {:__class__ "UziProcedureNode",
                        :name "default1",
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "arg0"}}]}]},
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "arg0"}]}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "arg0#1",
                                          :value 0}],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "arg0#1",
                                                        :value 0}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}}],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest the-order-of-the-keys-in-a-function-map-should-not-matter
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [{:__class__ "UziVariableDeclarationNode",
                        :name "temp"}],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziAssignmentNode",
                                             :left {:__class__ "UziVariableNode",
                                                    :name "temp"},
                                             :right {:__class__ "UziCallNode",
                                                     :selector "default1",
                                                     :arguments [{:__class__ "Association",
                                                                  :key nil,
                                                                  :value {:__class__ "UziPinLiteralNode",
                                                                          :type "D",
                                                                          :number 13}}]}}]}},
                       {:__class__ "UziFunctionNode",
                        :name "default1",
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "arg0"}}]}]},
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "arg0"}]}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "default1"},
                                            {:__class__ "UziPopInstruction",
                                             :argument {:__class__ "UziVariable", :name "temp"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "arg0#1",
                                          :value 0}],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "arg0#1",}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}}],
                             :locals [],
                             :name "default1",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable",
                                :name "temp",
                                :value 0},
                               {:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest return-without-value
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziProcedureNode",
                        :name "default",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziReturnNode",
                                             :value nil}]}},
                       {:__class__ "UziTaskNode",
                        :name "loop",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "default",
                                             :arguments []}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "ret"}}],
                             :locals [],
                             :name "default",
                             :ticking false},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 1000},
                             :instructions [{:__class__ "UziScriptCallInstruction",
                                             :argument "default"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}}],
                             :locals [],
                             :name "loop",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 1000}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest return-with-value
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziFunctionNode",
                        :name "addition",
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "x"},
                                    {:__class__ "UziVariableDeclarationNode",
                                     :name "y"}],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziReturnNode",
                                             :value {:__class__ "UziCallNode",
                                                     :selector "+",
                                                     :arguments [{:__class__ "Association",
                                                                  :key nil,
                                                                  :value {:__class__ "UziVariableNode",
                                                                          :name "x"}},
                                                                 {:__class__ "Association",
                                                                  :key nil,
                                                                  :value {:__class__ "UziVariableNode",
                                                                          :name "y"}}]}}]}},
                       {:__class__ "UziTaskNode",
                        :name "loop",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "write",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :type "D",
                                                                  :number 13}},
                                                         {:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziCallNode",
                                                                  :selector "addition",
                                                                  :arguments [{:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                                       :value 0.25}},
                                                                              {:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziNumberLiteralNode",
                                                                                       :value 0.75}}]}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "x#1",
                                          :value 0},
                                         {:__class__ "UziVariable",
                                          :name "y#2",
                                          :value 0}],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable", :name "x#1"}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable", :name "y#2"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "add"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "retv"}}],
                             :locals [],
                             :name "addition",
                             :ticking false},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 0.25}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 0.75}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "addition"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "write"}}],
                             :locals [],
                             :name "loop",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 1000},
                               {:__class__ "UziVariable", :value 13},
                               {:__class__ "UziVariable", :value 0.25},
                               {:__class__ "UziVariable", :value 0.75}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest task-control-nodes
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "loop",
                        :arguments [],
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :value 1,
                                      :scale "s"},
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "toggle",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :type "D",
                                                                  :number 13}}]}]}},
                       {:__class__ "UziTaskNode",
                        :name "main",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziScriptStartNode",
                                             :scripts ["loop"]},
                                            {:__class__ "UziScriptStopNode",
                                             :scripts ["loop"]},
                                            {:__class__ "UziScriptResumeNode",
                                             :scripts ["loop"]},
                                            {:__class__ "UziScriptPauseNode",
                                             :scripts ["loop"]},
                                            {:__class__ "UziCallNode",
                                             :selector "loop",
                                             :arguments []}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}}],
                             :locals [],
                             :name "loop",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziStartScriptInstruction",
                                             :argument "loop"},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "loop"},
                                            {:__class__ "UziResumeScriptInstruction",
                                             :argument "loop"},
                                            {:__class__ "UziPauseScriptInstruction",
                                             :argument "loop"},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "loop"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 1000},
                               {:__class__ "UziVariable", :value 13},
                               {:__class__ "UziVariable", :value 0}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest script-overriding-primitive
  (let [ast {:__class__ "UziProgramNode",
             :imports [],
             :globals [],
             :scripts [{:__class__ "UziTaskNode",
                        :name "default",
                        :arguments [],
                        :state "once",
                        :tickingRate nil,
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "turnOn",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziNumberLiteralNode",
                                                                  :value 0}}]}]}},
                       {:__class__ "UziProcedureNode",
                        :name "turnOn",
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "pin"}],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :selector "write",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "pin"}},
                                                         {:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziNumberLiteralNode",
                                                                  :value 1}}]}]}}],
             :primitives []}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 0}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "turnOn"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "default"}],
                             :locals [],
                             :name "default",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "pin#1",
                                          :value 0}],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "pin#1",
                                                        :value 0}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 1}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "write"}}],
                             :locals [],
                             :name "turnOn",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 1}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest program-with-yield-statement
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :number 13,
                                                                  :type "D"}}],
                                             :primitiveName "turnOn",
                                             :selector "turnOn"},
                                            {:__class__ "UziYieldNode"},
                                            {:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :number 13,
                                                                  :type "D"}}],
                                             :primitiveName "turnOff",
                                             :selector "turnOff"},
                                            {:__class__ "UziYieldNode"}]},
                        :name "main",
                        :state "running",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable", :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOn"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "yield"}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable", :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOff"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "yield"}}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable", :value 0},
                               {:__class__ "UziVariable", :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest script-call-with-keyword-arguments
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key "a",
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :number 9,
                                                                  :type "D"}},
                                                         {:__class__ "Association",
                                                          :key "c",
                                                          :value {:__class__ "UziNumberLiteralNode",
                                                                  :value 0.5}},
                                                         {:__class__ "Association",
                                                          :key "b",
                                                          :value {:__class__ "UziNumberLiteralNode",
                                                                  :value 0.75}}],
                                             :selector "foo"}]},
                        :name "main",
                        :state "running",
                        :tickingRate nil},
                       {:__class__ "UziProcedureNode",
                        :arguments [{:__class__ "UziVariableDeclarationNode",
                                     :name "a",
                                     :value nil},
                                    {:__class__ "UziVariableDeclarationNode",
                                     :name "b",
                                     :value nil},
                                    {:__class__ "UziVariableDeclarationNode",
                                     :name "c",
                                     :value nil}],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziVariableNode",
                                                                  :name "a"}},
                                                         {:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziCallNode",
                                                                  :arguments [{:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziVariableNode",
                                                                                       :name "b"}},
                                                                              {:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziVariableNode",
                                                                                       :name "c"}}],
                                                                  :selector "+"}}],
                                             :selector "write"}]},
                        :name "foo",
                        :state nil,
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 9}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 0.75}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 0.5}},
                                            {:__class__ "UziScriptCallInstruction",
                                             :argument "foo"},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "pop"}}],
                             :locals [],
                             :name "main",
                             :ticking true},
                            {:__class__ "UziScript",
                             :arguments [{:__class__ "UziVariable",
                                          :name "a#1",
                                          :value 0},
                                         {:__class__ "UziVariable",
                                          :name "b#2",
                                          :value 0},
                                         {:__class__ "UziVariable",
                                          :name "c#3",
                                          :value 0}],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "a#1",
                                                        :value 0}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "b#2",
                                                        :value 0}},
                                            {:__class__ "UziReadLocalInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :name "c#3",
                                                        :value 0}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "add"}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "write"}}],
                             :locals [],
                             :name "foo",
                             :ticking false}],
                  :variables #{{:__class__ "UziVariable",
                               :value 0},
                              {:__class__ "UziVariable",
                               :value 9},
                              {:__class__ "UziVariable",
                               :value 0.75},
                               {:__class__ "UziVariable",
                                :value 0.5}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest full-conditional
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziConditionalNode",
                                             :condition {:__class__ "UziCallNode",
                                                         :arguments [{:__class__ "Association",
                                                                      :key nil,
                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                              :number 13,
                                                                              :type "D"}}],
                                                         :selector "isOn"},
                                             :falseBranch {:__class__ "UziBlockNode",
                                                           :statements [{:__class__ "UziCallNode",
                                                                         :arguments [{:__class__ "Association",
                                                                                      :key nil,
                                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                                              :number 13,
                                                                                              :type "D"}}],
                                                                         :selector "turnOn"}]},
                                             :trueBranch {:__class__ "UziBlockNode",
                                                          :statements [{:__class__ "UziCallNode",
                                                                        :arguments [{:__class__ "Association",
                                                                                     :key nil,
                                                                                     :value {:__class__ "UziPinLiteralNode",
                                                                                             :number 13,
                                                                                             :type "D"}}],
                                                                        :selector "turnOff"}]}}]},
                        :name "main",
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :scale "s",
                                      :value 1}}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "isOn"}},
                                            {:__class__ "UziJZInstruction",
                                             :argument 3},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOff"}},
                                            {:__class__ "UziJMPInstruction",
                                             :argument 2},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOn"}}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 1000},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest conditional-with-only-true-branch
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziConditionalNode",
                                             :condition {:__class__ "UziCallNode",
                                                         :arguments [{:__class__ "Association",
                                                                      :key nil,
                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                              :number 13,
                                                                              :type "D"}}],
                                                         :selector "isOn"},
                                             :falseBranch {:__class__ "UziBlockNode",
                                                           :statements []},
                                             :trueBranch {:__class__ "UziBlockNode",
                                                          :statements [{:__class__ "UziCallNode",
                                                                        :arguments [{:__class__ "Association",
                                                                                     :key nil,
                                                                                     :value {:__class__ "UziPinLiteralNode",
                                                                                             :number 13,
                                                                                             :type "D"}}],
                                                                        :selector "turnOff"}]}}]},
                        :name "main",
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :scale "s",
                                      :value 1}}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "isOn"}},
                                            {:__class__ "UziJZInstruction",
                                             :argument 2},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOff"}}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 1000},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest conditional-with-only-false-branch
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziConditionalNode",
                                             :condition {:__class__ "UziCallNode",
                                                         :arguments [{:__class__ "Association",
                                                                      :key nil,
                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                              :number 13,
                                                                              :type "D"}}],
                                                         :selector "isOn"},
                                             :falseBranch {:__class__ "UziBlockNode",
                                                           :statements [{:__class__ "UziCallNode",
                                                                         :arguments [{:__class__ "Association",
                                                                                      :key nil,
                                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                                              :number 13,
                                                                                              :type "D"}}],
                                                                         :selector "turnOn"}]},
                                             :trueBranch {:__class__ "UziBlockNode",
                                                          :statements []}}]},
                        :name "main",
                        :state "running",
                        :tickingRate {:__class__ "UziTickingRateNode",
                                      :scale "s",
                                      :value 1}}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 1000},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "isOn"}},
                                            {:__class__ "UziJNZInstruction",
                                             :argument 2},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "turnOn"}}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                               :value 1000},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest forever
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziForeverNode",
                                             :body {:__class__ "UziBlockNode",
                                                    :statements [{:__class__ "UziCallNode",
                                                                  :arguments [{:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziPinLiteralNode",
                                                                                       :number 13,
                                                                                       :type "D"}}],
                                                                  :selector "toggle"}]}}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziJMPInstruction",
                                             :argument -3},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest while-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziWhileNode",
                                             :condition {:__class__ "UziNumberLiteralNode",
                                                         :value 1},
                                             :negated false,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements [{:__class__ "UziCallNode",
                                                                  :arguments [{:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziPinLiteralNode",
                                                                                       :number 13,
                                                                                       :type "D"}}],
                                                                  :selector "toggle"}]},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements []}}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziJZInstruction",
                                             :argument 3},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziJMPInstruction",
                                             :argument -5},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 1},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))

(deftest until-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziUntilNode",
                                             :condition {:__class__ "UziNumberLiteralNode",
                                                         :value 1},
                                             :negated true,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements [{:__class__ "UziCallNode",
                                                                  :arguments [{:__class__ "Association",
                                                                               :key nil,
                                                                               :value {:__class__ "UziPinLiteralNode",
                                                                                       :number 13,
                                                                                       :type "D"}}],
                                                                  :selector "toggle"}]},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements []}}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziJNZInstruction",
                                             :argument 3},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziJMPInstruction",
                                             :argument -5},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 1},
                               {:__class__ "UziVariable",
                                :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest do-while-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziDoWhileNode",
                                             :condition {:__class__ "UziNumberLiteralNode",
                                                         :value 1},
                                             :negated false,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements []},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements [{:__class__ "UziCallNode",
                                                                 :arguments [{:__class__ "Association",
                                                                              :key nil,
                                                                              :value {:__class__ "UziPinLiteralNode",
                                                                                      :number 13,
                                                                                      :type "D"}}],
                                                                 :selector "toggle"}]}}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziJNZInstruction",
                                             :argument -4},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 13},
                               {:__class__ "UziVariable",
                                :value 1}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest do-until-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziDoUntilNode",
                                             :condition {:__class__ "UziNumberLiteralNode",
                                                         :value 1},
                                             :negated true,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements []},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements [{:__class__ "UziCallNode",
                                                                 :arguments [{:__class__ "Association",
                                                                              :key nil,
                                                                              :value {:__class__ "UziPinLiteralNode",
                                                                                      :number 13,
                                                                                      :type "D"}}],
                                                                 :selector "toggle"}]}}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected {:__class__ "UziProgram",
                  :scripts [{:__class__ "UziScript",
                             :arguments [],
                             :delay {:__class__ "UziVariable",
                                     :value 0},
                             :instructions [{:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 13}},
                                            {:__class__ "UziPrimitiveCallInstruction",
                                             :argument {:__class__ "UziPrimitive",
                                                        :name "toggle"}},
                                            {:__class__ "UziPushInstruction",
                                             :argument {:__class__ "UziVariable",
                                                        :value 1}},
                                            {:__class__ "UziJZInstruction",
                                             :argument -4},
                                            {:__class__ "UziStopScriptInstruction",
                                             :argument "main"}],
                             :locals [],
                             :name "main",
                             :ticking true}],
                  :variables #{{:__class__ "UziVariable",
                                :value 0},
                               {:__class__ "UziVariable",
                                :value 13},
                               {:__class__ "UziVariable",
                                :value 1}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest wait-while-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziWhileNode",
                                             :condition {:__class__ "UziCallNode",
                                                         :arguments [{:__class__ "Association",
                                                                      :key nil,
                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                              :number 9,
                                                                              :type "D"}}],
                                                         :selector "isOn"},
                                             :negated false,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements []},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements []}},
                                            {:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :number 13,
                                                                  :type "D"}}],
                                             :selector "toggle"}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected  {:__class__ "UziProgram",
                   :scripts [{:__class__ "UziScript",
                              :arguments [],
                              :delay {:__class__ "UziVariable",
                                      :value 0},
                              :instructions [{:__class__ "UziPushInstruction",
                                              :argument {:__class__ "UziVariable",
                                                         :value 9}},
                                             {:__class__ "UziPrimitiveCallInstruction",
                                              :argument {:__class__ "UziPrimitive",
                                                         :name "isOn"}},
                                             {:__class__ "UziJNZInstruction",
                                              :argument -3},
                                             {:__class__ "UziPushInstruction",
                                              :argument {:__class__ "UziVariable",
                                                         :value 13}},
                                             {:__class__ "UziPrimitiveCallInstruction",
                                              :argument {:__class__ "UziPrimitive",
                                                         :name "toggle"}},
                                             {:__class__ "UziStopScriptInstruction",
                                              :argument "main"}],
                              :locals [],
                              :name "main",
                              :ticking true}],
                   :variables #{{:__class__ "UziVariable",
                                 :value 0},
                                {:__class__ "UziVariable",
                                 :value 9},
                                {:__class__ "UziVariable",
                                 :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))


(deftest wait-until-loop
  (let [ast {:__class__ "UziProgramNode",
             :globals [],
             :imports [],
             :primitives [],
             :scripts [{:__class__ "UziTaskNode",
                        :arguments [],
                        :body {:__class__ "UziBlockNode",
                               :statements [{:__class__ "UziUntilNode",
                                             :condition {:__class__ "UziCallNode",
                                                         :arguments [{:__class__ "Association",
                                                                      :key nil,
                                                                      :value {:__class__ "UziPinLiteralNode",
                                                                              :number 9,
                                                                              :type "D"}}],
                                                         :selector "isOn"},
                                             :negated true,
                                             :post {:__class__ "UziBlockNode",
                                                    :statements []},
                                             :pre {:__class__ "UziBlockNode",
                                                   :statements []}},
                                            {:__class__ "UziCallNode",
                                             :arguments [{:__class__ "Association",
                                                          :key nil,
                                                          :value {:__class__ "UziPinLiteralNode",
                                                                  :number 13,
                                                                  :type "D"}}],
                                             :selector "toggle"}]},
                        :name "main",
                        :state "once",
                        :tickingRate nil}]}
        expected  {:__class__ "UziProgram",
                   :scripts [{:__class__ "UziScript",
                              :arguments [],
                              :delay {:__class__ "UziVariable",
                                      :value 0},
                              :instructions [{:__class__ "UziPushInstruction",
                                              :argument {:__class__ "UziVariable",
                                                         :value 9}},
                                             {:__class__ "UziPrimitiveCallInstruction",
                                              :argument {:__class__ "UziPrimitive",
                                                         :name "isOn"}},
                                             {:__class__ "UziJZInstruction",
                                              :argument -3},
                                             {:__class__ "UziPushInstruction",
                                              :argument {:__class__ "UziVariable",
                                                         :value 13}},
                                             {:__class__ "UziPrimitiveCallInstruction",
                                              :argument {:__class__ "UziPrimitive",
                                                         :name "toggle"}},
                                             {:__class__ "UziStopScriptInstruction",
                                              :argument "main"}],
                              :locals [],
                              :name "main",
                              :ticking true}],
                   :variables #{{:__class__ "UziVariable",
                                 :value 0},
                                {:__class__ "UziVariable",
                                 :value 9},
                                {:__class__ "UziVariable",
                                 :value 13}}}
        actual (compile-tree ast)]
    (is (equivalent? expected actual))))
